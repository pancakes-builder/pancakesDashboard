/* -------------------------------- 

File#: _1_drawer
Title: Drawer
Descr: A slide-in panel used to display critical content.

-------------------------------- */

:root {
  --drawer-width: 400px;
}

.drawer {
  position: relative;
  z-index: var(--zindex-overlay);
  width: 100%;
  height: 100%;
  top: 0;
  right: 0;
  // hide drawer
  visibility: hidden;
  transition: visibility 0s 0.3s;

  &:focus {
    outline: none;
  }

  @include breakpoint(xs) {
    width: var(--drawer-width);
  }
}

.open-drawer-right {
  .drawer {
    visibility: visible;
    transition: none;
  }
  .drawer__content {
    transform: translateX(0);
  }
}

.drawer__content {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  right: 0;
  background-color: var(--color-bg);
  transform: translateX(100%);
  transition: transform 0.3s;
  transition-timing-function: var(--ease-in-out);

}

.drawer__body {
  // scrollable area
  padding: var(--space-sm) var(--component-padding);
  height: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch; // smooth scroll on iOS
}

.drawer__close-btn {
  position: fixed;
  z-index: var(--zindex-fixed-element);
  top: var(--space-xxs);
  right: var(--space-xxs);
  width: 32px;
  height: 32px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  background-color: alpha(var(--color-contrast-higher), 0.85);

  &:hover {
    background-color: var(--color-contrast-higher);
  }
  
  .icon {
    display: block;
    color: var(--color-bg);
    font-size: 16px;
  }
}

// --fixed-header
.drawer--fixed-header .drawer__content {
  overflow: auto; // flex fallback
  display: flex;
  flex-direction: column;
}

.drawer--fixed-header .drawer__header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-shrink: 0;
  padding: var(--space-xs) var(--component-padding);
  border-bottom: 1px solid var(--color-contrast-low);
}

.drawer--fixed-header .drawer__close-btn {
  position: static; 
}

// --modal
.drawer--modal {
  width: 100%;
  background-color: alpha(var(--color-contrast-higher), 0);
  transition: background-color 0.3s, visibility 0s 0.3s;

  &.drawer--is-visible {
    background-color: alpha(var(--color-contrast-higher), 0.6);
    transition: background-color 0.3s;
  }

  &.drawer--open-left .drawer__content {
    right: auto;
    left: 0;
  }

  @include breakpoint(xs) {
    .drawer__content {
      width: var(--drawer-width);
    }
  }
}